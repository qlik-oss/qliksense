apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: policy-decisions
    chart: policy-decisions-2.0.2
    heritage: Helm
    release: policy-decisions
  name: policy-decisions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: policy-decisions
      release: policy-decisions
  template:
    metadata:
      labels:
        app: policy-decisions
        release: policy-decisions
    spec:
      containers:
        - env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: mongodbUri
                  name: policy-decisions-secrets
            - name: MONGO_URI
              value: $(MONGODB_URI)
            - name: KEYS_URI
              valueFrom:
                configMapKeyRef:
                  key: keysUri
                  name: policy-decisions-configs
            - name: JWKS_ENDPOINT
              value: $(KEYS_URI)/v1/keys/qlik.api.internal
            - name: SPACES_URI
              valueFrom:
                configMapKeyRef:
                  key: spacesUri
                  name: policy-decisions-configs
            - name: LICENSES_URI
              valueFrom:
                configMapKeyRef:
                  key: licensesUri
                  name: policy-decisions-configs
            - name: GROUPS_URI
              valueFrom:
                configMapKeyRef:
                  key: groupsUri
                  name: policy-decisions-configs
            - name: LICENSES__URL
              value: $(LICENSES_URI)/
            - name: GROUPS__URL
              value: $(GROUPS_URI)/
            - name: SPACES__URL
              value: $(SPACES_URI)/
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: policy-decisions-configs
            - name: TOKEN_URI
              value: $(EDGE_AUTH_URI)/v1/internal-tokens
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: policy-decisions-configs
            - name: NATSSTREAMING__CLUSTERID
              value: $(NATS_STREAMING_CLUSTER_ID)
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: policy-decisions-configs
            - name: NATSSTREAMING__URL
              value: $(NATS_URI)
            - name: TOKEN_AUTH_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: tokenAuthPrivateKey
                  name: policy-decisions-secrets
            - name: JWTPROVIDER__PRIVATEKEY
              value: $(TOKEN_AUTH_PRIVATE_KEY)
            - name: TOKEN_AUTH_PRIVATE_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: tokenAuthPrivateKeyId
                  name: policy-decisions-secrets
            - name: JWTPROVIDER__KID
              value: $(TOKEN_AUTH_PRIVATE_KEY_ID)
            - name: RULESENGINE__ENABLE
              value: "true"
            - name: AUTHORIZATION__ENABLE
              value: "true"
            - name: SWAGGER__ENABLE
              value: "false"
            - name: JWTAUTHENTICATION__ENABLE
              value: "true"
            - name: NATSSTREAMING__ENABLED
              value: "true"
            - name: NATSSTREAMING__HANDLEEVENTS
              value: "true"
            - name: SPACES__ENABLED
              value: "true"
            - name: REDIS__ENABLED
              value: "false"
            - name: RULESFROMFILE__ENABLED
              value: "false"
            - name: GROUPS__ENABLED
              value: "true"
          image: qlik-docker-qsefe.bintray.io/policy-decision-service:1.76.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 5080
          name: main
          ports:
            - containerPort: 5080
          readinessProbe:
            httpGet:
              path: /ready
              port: 5080
          volumeMounts: null
      dnsConfig:
        options:
          - name: timeout
            value: "1"
          - name: single-request-reopen
      imagePullSecrets:
        - name: artifactory-docker-secret
---
