apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis-user-state
    chart: redis-user-state-10.5.6
    heritage: Helm
    release: engine
  name: engine-redis-user-state-master
spec:
  selector:
    matchLabels:
      app: redis-user-state
      release: engine
      role: master
  serviceName: engine-redis-user-state-headless
  template:
    metadata:
      annotations:
        checksum/configmap: 829946c62b197be905ac7c071fa9d158287e0655a89718c69146abd93369e72d
        checksum/health: 159e355365b2541a52fc279dc80bb60414dc8f886b00d50852a4465468e052ed
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
      labels:
        app: redis-user-state
        chart: redis-user-state-10.5.6
        release: engine
        role: master
    spec:
      containers:
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -n $REDIS_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_PASSWORD_FILE}`
                export REDIS_PASSWORD=$password_aux
              fi
              if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
              fi
              if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
              fi
              ARGS=("--port" "${REDIS_PORT}")
              ARGS+=("--protected-mode" "no")
              ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
              ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
              /run.sh ${ARGS[@]}
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_PORT
              value: "6379"
          image: docker.io/bitnami/redis:5.0.7-debian-10-r32
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: main
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: null
          volumeMounts:
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
              subPath: null
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc/
              name: redis-tmp-conf
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -n $REDIS_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_PASSWORD_FILE}`
                export REDIS_PASSWORD=$password_aux
              fi
              if [[ ! -f /opt/bitnami/redis-sentinel/etc/sentinel.conf ]];then
                cp /opt/bitnami/redis-sentinel/mounted-etc/sentinel.conf /opt/bitnami/redis-sentinel/etc/sentinel.conf
              fi
              echo "Getting information about current running sentinels"
              # Get information from existing sentinels
              existing_sentinels=$(timeout -s 9 5 redis-cli --raw -h "$SENTINEL_STATE" -a "$REDIS_PASSWORD" -p 26379 SENTINEL sentinels engine-redis-user-state)
              echo "$existing_sentinels" | awk -f /health/parse_sentinels.awk | tee -a  /opt/bitnami/redis-sentinel/etc/sentinel.conf

              redis-server /opt/bitnami/redis-sentinel/etc/sentinel.conf --sentinel
          env:
            - name: SENTINEL_STATE
              value: $(PREFIX)-engine-redis-user-state
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_SENTINEL_PORT
              value: "26379"
          image: docker.io/bitnami/redis-sentinel:5.0.7-debian-10-r27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_sentinel.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: sentinel
          ports:
            - containerPort: 26379
              name: redis-sentinel
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_sentinel.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: null
          volumeMounts:
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
              subPath: null
            - mountPath: /opt/bitnami/redis-sentinel/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis-sentinel/etc/
              name: sentinel-tmp-conf
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -f '/secrets/redis-password' ]]; then
               export REDIS_PASSWORD=$(cat /secrets/redis-password)
              fi
              redis_exporter
          env:
            - name: REDIS_ALIAS
              value: $(PREFIX)-engine-redis-user-state
          image: docker.io/bitnami/redis-exporter:1.4.0-debian-10-r3
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
            - containerPort: 9121
              name: metrics
          resources: null
          volumeMounts: null
      imagePullSecrets:
        - name: artifactory-docker-secret
      serviceAccountName: default
      volumes:
        - configMap:
            defaultMode: 493
            name: engine-redis-user-state-health
          name: health
        - configMap:
            name: engine-redis-user-state
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
        - emptyDir: {}
          name: sentinel-tmp-conf
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        labels:
          app: redis-user-state
          component: master
          heritage: Helm
          release: engine
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        selector: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis-user-state
    chart: redis-user-state-10.5.6
    heritage: Helm
    release: engine
  name: engine-redis-user-state-slave
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis-user-state
      release: engine
      role: slave
  serviceName: engine-redis-user-state-headless
  template:
    metadata:
      annotations:
        checksum/configmap: 829946c62b197be905ac7c071fa9d158287e0655a89718c69146abd93369e72d
        checksum/health: 159e355365b2541a52fc279dc80bb60414dc8f886b00d50852a4465468e052ed
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
      labels:
        app: redis-user-state
        chart: redis-user-state-10.5.6
        release: engine
        role: slave
    spec:
      containers:
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -n $REDIS_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_PASSWORD_FILE}`
                export REDIS_PASSWORD=$password_aux
              fi
              if [[ -n $REDIS_MASTER_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_MASTER_PASSWORD_FILE}`
                export REDIS_MASTER_PASSWORD=$password_aux
              fi
              if [[ ! -f /opt/bitnami/redis/etc/replica.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/replica.conf /opt/bitnami/redis/etc/replica.conf
              fi
              if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
              fi
              ARGS=("--port" "${REDIS_PORT}")
              ARGS+=("--slaveof" "${REDIS_MASTER_HOST}" "${REDIS_MASTER_PORT_NUMBER}")
              ARGS+=("--protected-mode" "no")
              ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
              ARGS+=("--include" "/opt/bitnami/redis/etc/replica.conf")
              /run.sh "${ARGS[@]}"
          env:
            - name: REDIS_MASTER_HOST
              value: $(PREFIX)-engine-redis-user-state-master-0.$(PREFIX)-engine-redis-user-state-headless.$(NAMESPACE).svc.cluster.local
            - name: REDIS_REPLICATION_MODE
              value: slave
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_MASTER_PORT_NUMBER
              value: "6379"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          image: docker.io/bitnami/redis:5.0.7-debian-10-r32
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: main
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: null
          volumeMounts:
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc
              name: redis-tmp-conf
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -n $REDIS_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_PASSWORD_FILE}`
                export REDIS_PASSWORD=$password_aux
              fi
              if [[ ! -f /opt/bitnami/redis-sentinel/etc/sentinel.conf ]];then
                cp /opt/bitnami/redis-sentinel/mounted-etc/sentinel.conf /opt/bitnami/redis-sentinel/etc/sentinel.conf
              fi

              redis-server /opt/bitnami/redis-sentinel/etc/sentinel.conf --sentinel
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_SENTINEL_PORT
              value: "26379"
          image: docker.io/bitnami/redis-sentinel:5.0.7-debian-10-r27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_sentinel.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: sentinel
          ports:
            - containerPort: 26379
              name: redis-sentinel
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_sentinel.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: null
          volumeMounts:
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
              subPath: null
            - mountPath: /opt/bitnami/redis-sentinel/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis-sentinel/etc
              name: sentinel-tmp-conf
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -f '/secrets/redis-password' ]]; then
               export REDIS_PASSWORD=$(cat /secrets/redis-password)
              fi
              redis_exporter
          env:
            - name: REDIS_ALIAS
              value: $(PREFIX)-engine-redis-user-state
          image: docker.io/bitnami/redis-exporter:1.4.0-debian-10-r3
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
            - containerPort: 9121
              name: metrics
          resources: null
          volumeMounts: null
      imagePullSecrets:
        - name: artifactory-docker-secret
      serviceAccountName: default
      volumes:
        - configMap:
            defaultMode: 493
            name: engine-redis-user-state-health
          name: health
        - configMap:
            name: engine-redis-user-state
          name: config
        - emptyDir: {}
          name: sentinel-tmp-conf
        - emptyDir: {}
          name: redis-tmp-conf
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        labels:
          app: redis-user-state
          component: slave
          heritage: Helm
          release: engine
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        selector: null
---
