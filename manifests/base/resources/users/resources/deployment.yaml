apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: users
    chart: users-2.1.36
    heritage: Helm
    release: users
  name: users
  namespace: $(NAMESPACE)
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
      release: users
  template:
    metadata:
      annotations:
        checksum/configs: db0d7cd16c370e114904eb9a1f4ec48abb3616609796ac4852f9e640d7ba7300
        checksum/secrets: 6959e05b79a9fd4433499ec53ce1c7d36c927a82096a905bb7c638434adc9f78
      labels:
        app: users
        release: users
        users-nats-client: "true"
    spec:
      containers:
        - env:
            - name: KEYS_URI_TEMP
              valueFrom:
                configMapKeyRef:
                  key: keysUri
                  name: users-configs
            - name: KEYS_URI
              value: $(KEYS_URI_TEMP)/v1/keys
            - name: EDGE_AUTH_URI
              valueFrom:
                configMapKeyRef:
                  key: edgeAuthUri
                  name: users-configs
            - name: TOKEN_AUTH_URI
              value: $(EDGE_AUTH_URI)/v1
            - name: FEATURE_FLAGS_URI_TEMP
              valueFrom:
                configMapKeyRef:
                  key: featureFlagsUri
                  name: users-configs
            - name: FEATURE_FLAGS_URI
              value: $(FEATURE_FLAGS_URI_TEMP)/v1
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGODB_URI_FILE
              value: /run/secrets/qlik.com/users/mongodbUri
            - name: TOKEN_AUTH_PRIVATE_KEY_FILE
              value: /run/secrets/qlik.com/users/tokenAuthPrivateKey
            - name: TOKEN_AUTH_PRIVATE_KEY_ID_FILE
              value: /run/secrets/qlik.com/users/tokenAuthPrivateKeyId
            - name: INGRESS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: ingressAuthUrl
                  name: users-configs
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: logLevel
                  name: users-configs
            - name: NATS_STREAMING_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: natsStreamingClusterId
                  name: users-configs
            - name: NATS_URI
              valueFrom:
                configMapKeyRef:
                  key: natsUri
                  name: users-configs
            - name: ENVIRONMENT
              value: qseok
            - name: MONGO_MAX_TIME_MS
              value: "2000"
            - name: MONGO_TIMEOUT_ENABLED
              value: "true"
            - name: NATS_ENABLED
              value: "true"
            - name: REGION
              value: example
          image: qlik-docker-qsefe.bintray.io/users:2.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: http
          name: main
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          volumeMounts:
            - mountPath: /run/secrets/qlik.com/users
              name: users-secrets
              readOnly: true
      dnsConfig:
        options:
          - name: timeout
            value: "1"
      imagePullSecrets:
        - name: artifactory-docker-secret
      volumes:
        - name: users-secrets
          secret:
            secretName: users-secrets
---
